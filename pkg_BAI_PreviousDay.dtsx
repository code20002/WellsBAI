<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/11/2021 2:49:46 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="developer"
  DTS:CreatorName="ssisdeveloper"
  DTS:DTSID="{7CA078A0-0617-4EEF-AFD5-2956F7D8C5D5}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.150"
  DTS:LocaleID="1033"
  DTS:ObjectName="pkg_BAI_PreviousDay"
  DTS:PackageType="5"
  DTS:VersionBuild="36"
  DTS:VersionGUID="{BD1788A5-7E5F-46D5-91BC-215B981DF87B}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[dest_ado_db_staging]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{1AC23F11-FB03-4529-80E1-FC4D1CD7D18B}"
      DTS:ObjectName="dest_ado_db_staging">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.;Initial Catalog=staging;Integrated Security=True;Application Name=SSIS-Package-{1AC23F11-FB03-4529-80E1-FC4D1CD7D18B}LocalHost.staging;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[dest_fl_bai_previousday]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{2CBAF92A-0A3F-4E96-A915-88ACD8679E3E}"
      DTS:ObjectName="dest_fl_bai_previousday">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:Unicode="True"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\temp\BAI\transformed_BAI_PreviousDay.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x007C_"
              DTS:DataType="303"
              DTS:TextQualified="True"
              DTS:ObjectName="packet01"
              DTS:DTSID="{0A2960C1-FD6B-436B-9898-A5BB66C69FEF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x007C_"
              DTS:DataType="303"
              DTS:TextQualified="True"
              DTS:ObjectName="packet02"
              DTS:DTSID="{17124F56-FC7A-4F4C-AEDE-3C42D106FB74}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x007C_"
              DTS:DataType="303"
              DTS:TextQualified="True"
              DTS:ObjectName="packet03"
              DTS:DTSID="{1DD23EE0-2862-4DAA-B072-092B3246A6DA}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x007C_"
              DTS:DataType="303"
              DTS:TextQualified="True"
              DTS:ObjectName="packet16"
              DTS:DTSID="{A999B433-346E-499F-AB94-8E6C88AF42EE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x007C_"
              DTS:DataType="303"
              DTS:TextQualified="True"
              DTS:ObjectName="packet49"
              DTS:DTSID="{73882250-FA3D-4C40-A3F2-8DB5831BB0C1}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x007C_"
              DTS:DataType="303"
              DTS:TextQualified="True"
              DTS:ObjectName="packet98"
              DTS:DTSID="{6975B343-B3BF-46D9-A2F4-DE09AC1607BE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="303"
              DTS:TextQualified="True"
              DTS:ObjectName="packet99"
              DTS:DTSID="{877EF411-D579-4A43-8F06-D5ABF9F5B1B5}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8C582D2E-1DD6-4707-BAAE-109167298FD6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileName">
      <DTS:VariableValue
        DTS:DataType="8">C:\temp\BAI\Direct_BAI_Standard_Previous_Day.txt</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{847966B5-1C2B-4BDA-914B-9F8563DE2C97}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TableName">
      <DTS:VariableValue
        DTS:DataType="8">stg_bai_previousday</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Create Staging Table"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{C38B0B85-C7FE-4815-8E7F-6A65B77BE799}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create Staging Table"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{1AC23F11-FB03-4529-80E1-FC4D1CD7D18B}"
          SQLTask:SqlStatementSource=" IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[stg_bai_previousday]') AND type in (N'U'))&#xA;DROP TABLE [dbo].[stg_bai_previousday]&#xA;GO&#xA; &#xA;SET ANSI_NULLS ON&#xA;GO&#xA;&#xA;SET QUOTED_IDENTIFIER ON&#xA;GO&#xA;&#xA;CREATE TABLE [dbo].[stg_bai_previousday]( &#xA;&#x9;[packet01] [varchar](max) NULL,&#xA;&#x9;[packet02] [varchar](max) NULL,&#xA;&#x9;[packet03] [varchar](max) NULL,&#xA;&#x9;[packet16] [varchar](max) NULL,&#xA;&#x9;[packet49] [varchar](max) NULL,&#xA;&#x9;[packet98] [varchar](max) NULL,&#xA;&#x9;[packet99] [varchar](max) NULL&#xA;) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task - Export File"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{6DA97F04-9463-43FF-9FCB-8749EF2DE81A}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task - Export File"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task - Export File\ADO NET Source"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server."
              name="ADO NET Source"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement used by the component to extract data."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">30</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether to allow non-string external columns to be implicitly converted to strings at the output columns."
                  name="AllowImplicitStringConversion">true</property>
                <property
                  dataType="System.String"
                  description="The Source database table name."
                  expressionType="Notify"
                  name="TableOrViewName"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">"dbo"."stg_bai_previousday"</property>
                <property
                  dataType="System.Int32"
                  description="Specify the mode to retrieve external column information"
                  name="AccessMode"
                  typeConverter="Microsoft.SqlServer.Dts.Pipeline.DataReaderSourceAdapter+EnumToStringConverter">0</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.DataReaderSourceAdapter</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task - Export File\ADO NET Source.Connections[IDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[dest_ado_db_staging]"
                  connectionManagerRefId="Package.ConnectionManagers[dest_ado_db_staging]"
                  description="Managed connection manager"
                  name="IDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output]"
                  name="ADO NET Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].Columns[packet01]"
                      dataType="nText"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[packet01]"
                      lineageId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].Columns[packet01]"
                      name="packet01"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].Columns[packet02]"
                      dataType="nText"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[packet02]"
                      lineageId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].Columns[packet02]"
                      name="packet02"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].Columns[packet03]"
                      dataType="nText"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[packet03]"
                      lineageId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].Columns[packet03]"
                      name="packet03"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].Columns[packet16]"
                      dataType="nText"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[packet16]"
                      lineageId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].Columns[packet16]"
                      name="packet16"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].Columns[packet49]"
                      dataType="nText"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[packet49]"
                      lineageId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].Columns[packet49]"
                      name="packet49"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].Columns[packet98]"
                      dataType="nText"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[packet98]"
                      lineageId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].Columns[packet98]"
                      name="packet98"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].Columns[packet99]"
                      dataType="nText"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[packet99]"
                      lineageId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].Columns[packet99]"
                      name="packet99"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[packet01]"
                      dataType="nText"
                      name="packet01" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[packet02]"
                      dataType="nText"
                      name="packet02" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[packet03]"
                      dataType="nText"
                      name="packet03" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[packet16]"
                      dataType="nText"
                      name="packet16" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[packet49]"
                      dataType="nText"
                      name="packet49" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[packet98]"
                      dataType="nText"
                      name="packet98" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[packet99]"
                      dataType="nText"
                      name="packet99" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Error Output]"
                  isErrorOut="true"
                  name="ADO NET Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[packet01]"
                      dataType="nText"
                      lineageId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[packet01]"
                      name="packet01" />
                    <outputColumn
                      refId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[packet02]"
                      dataType="nText"
                      lineageId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[packet02]"
                      name="packet02" />
                    <outputColumn
                      refId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[packet03]"
                      dataType="nText"
                      lineageId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[packet03]"
                      name="packet03" />
                    <outputColumn
                      refId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[packet16]"
                      dataType="nText"
                      lineageId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[packet16]"
                      name="packet16" />
                    <outputColumn
                      refId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[packet49]"
                      dataType="nText"
                      lineageId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[packet49]"
                      name="packet49" />
                    <outputColumn
                      refId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[packet98]"
                      dataType="nText"
                      lineageId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[packet98]"
                      name="packet98" />
                    <outputColumn
                      refId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[packet99]"
                      dataType="nText"
                      lineageId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[packet99]"
                      name="packet99" />
                    <outputColumn
                      refId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task - Export File\Flat File Destination"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Destination"
              localeId="1033"
              name="Flat File Destination"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
                <property
                  dataType="System.Boolean"
                  description="When text qualifier is enabled, specifies whether the text qualifier in the data written to the destination file will be escaped or not."
                  name="EscapeQualifier">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task - Export File\Flat File Destination.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[dest_fl_bai_previousday]"
                  connectionManagerRefId="Package.ConnectionManagers[dest_fl_bai_previousday]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task - Export File\Flat File Destination.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task - Export File\Flat File Destination.Inputs[Flat File Destination Input].Columns[packet01]"
                      cachedDataType="nText"
                      cachedName="packet01"
                      externalMetadataColumnId="Package\Data Flow Task - Export File\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[packet01]"
                      lineageId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].Columns[packet01]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Export File\Flat File Destination.Inputs[Flat File Destination Input].Columns[packet02]"
                      cachedDataType="nText"
                      cachedName="packet02"
                      externalMetadataColumnId="Package\Data Flow Task - Export File\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[packet02]"
                      lineageId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].Columns[packet02]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Export File\Flat File Destination.Inputs[Flat File Destination Input].Columns[packet03]"
                      cachedDataType="nText"
                      cachedName="packet03"
                      externalMetadataColumnId="Package\Data Flow Task - Export File\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[packet03]"
                      lineageId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].Columns[packet03]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Export File\Flat File Destination.Inputs[Flat File Destination Input].Columns[packet16]"
                      cachedDataType="nText"
                      cachedName="packet16"
                      externalMetadataColumnId="Package\Data Flow Task - Export File\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[packet16]"
                      lineageId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].Columns[packet16]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Export File\Flat File Destination.Inputs[Flat File Destination Input].Columns[packet49]"
                      cachedDataType="nText"
                      cachedName="packet49"
                      externalMetadataColumnId="Package\Data Flow Task - Export File\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[packet49]"
                      lineageId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].Columns[packet49]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Export File\Flat File Destination.Inputs[Flat File Destination Input].Columns[packet98]"
                      cachedDataType="nText"
                      cachedName="packet98"
                      externalMetadataColumnId="Package\Data Flow Task - Export File\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[packet98]"
                      lineageId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].Columns[packet98]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Export File\Flat File Destination.Inputs[Flat File Destination Input].Columns[packet99]"
                      cachedDataType="nText"
                      cachedName="packet99"
                      externalMetadataColumnId="Package\Data Flow Task - Export File\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[packet99]"
                      lineageId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output].Columns[packet99]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Export File\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[packet01]"
                      dataType="nText"
                      name="packet01" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Export File\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[packet02]"
                      dataType="nText"
                      name="packet02" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Export File\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[packet03]"
                      dataType="nText"
                      name="packet03" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Export File\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[packet16]"
                      dataType="nText"
                      name="packet16" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Export File\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[packet49]"
                      dataType="nText"
                      name="packet49" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Export File\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[packet98]"
                      dataType="nText"
                      name="packet98" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Export File\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[packet99]"
                      dataType="nText"
                      name="packet99" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Flow Task - Export File.Paths[ADO NET Source Output]"
              endId="Package\Data Flow Task - Export File\Flat File Destination.Inputs[Flat File Destination Input]"
              name="ADO NET Source Output"
              startId="Package\Data Flow Task - Export File\ADO NET Source.Outputs[ADO NET Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{6BF3A0E6-2A9C-43A2-B2F1-91CCEE21C437}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_e985b86348734252bd8708c7416e6996"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="FileName,TableName">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e985b86348734252bd8708c7416e6996.Properties.Settings.get_Default():ST_e985b86348734252bd8708c7416e6996.Properties.Sett" +
    "ings")]

namespace ST_e985b86348734252bd8708c7416e6996.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Data.SqlClient;
using System.Collections.Generic;
#endregion

namespace ST_e985b86348734252bd8708c7416e6996
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        //declare objects for BaiPreviousDay based on file structure
        class BaiPreviousDayFile
        {
            public string FileHeader { get; set; }
            public List<BaiPreviousDayGroup> Groups { get; set; }
            public string FileTrailer { get; set; }
        }
        class BaiPreviousDayGroup
        {
            public string GroupHeader { get; set; }
            public List<BaiPreviousDayAccount> Accounts { get; set; }
            public string GroupTrailer { get; set; }
        }
        class BaiPreviousDayAccount
        {
            public string AccountHeader { get; set; }
            public List<string> DetailTransactions { get; set; }
            public string AccountTrailer { get; set; }
        } 

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            try
            {
                string fileName = Dts.Variables["FileName"].Value.ToString();
                string TableName = Dts.Variables["TableName"].Value.ToString();
                string record = string.Empty;
                List<string> Records = new List<string>();
                BaiPreviousDayFile curFile = new BaiPreviousDayFile();
                string query = string.Empty;
                string recordid = string.Empty;
                string recorddetail = string.Empty; 
                string contflag = string.Empty;
                SqlConnection conn = new SqlConnection();
                conn = (SqlConnection)(Dts.Connections["dest_ado_db_staging"].AcquireConnection(Dts.Transaction) as SqlConnection);
                //Read data from table or view to data table       
                System.IO.StreamReader SourceFile = new System.IO.StreamReader(fileName);

                curFile.Groups = new List<BaiPreviousDayGroup>();
                while ((record = SourceFile.ReadLine()) != null)
            { 
                    record = record.Trim();
                    recordid = record.Substring(0, 2);
                    recorddetail = record.Substring(3, record.Length - 4);

                    //create object based on the recordid
                    switch (recordid)
                    {
                        case "01":
                            curFile.FileHeader = recorddetail;
                            break;
                        case "02":
                            curFile.Groups.Add(new BaiPreviousDayGroup());
                            var group = curFile.Groups[curFile.Groups.Count - 1];
                            group.GroupHeader = recorddetail;
                            group.Accounts = new List<BaiPreviousDayAccount>();
                            break;
                        case "03":
                            curFile.Groups[curFile.Groups.Count - 1].Accounts.Add(new BaiPreviousDayAccount());
                            var account = curFile.Groups[curFile.Groups.Count - 1].Accounts[curFile.Groups[curFile.Groups.Count - 1].Accounts.Count - 1];
                            account.AccountHeader = recorddetail;
                            account.DetailTransactions = new List<string>();
                            contflag = recordid;
                            break;
                        case "16":
                            curFile.Groups[curFile.Groups.Count - 1].Accounts[curFile.Groups[curFile.Groups.Count - 1].Accounts.Count - 1].DetailTransactions.Add(recorddetail);
                            contflag = recordid;
                            break;
                        case "88":
                            if (contflag == "03")
                            {
                                var accountdetail = curFile.Groups[curFile.Groups.Count - 1].Accounts;
                                accountdetail[accountdetail.Count - 1].AccountHeader += recorddetail;
                            }
                            else if (contflag == "16")
                            {
                                var detail = curFile.Groups[curFile.Groups.Count - 1].Accounts[curFile.Groups[curFile.Groups.Count - 1].Accounts.Count - 1].DetailTransactions;
                                detail[detail.Count - 1] += recorddetail;
                            }
                            break;
                        case "49":
                            curFile.Groups[curFile.Groups.Count - 1].Accounts[curFile.Groups[curFile.Groups.Count - 1].Accounts.Count - 1].AccountTrailer = recorddetail;
                            break;
                        case "98":
                            curFile.Groups[curFile.Groups.Count - 1].GroupTrailer = recorddetail;
                            break;
                        case "99":
                            curFile.FileTrailer = recorddetail;
                            break;
                        default:
                            Console.WriteLine("Invalid Record ID");
                            break;
                    }  
                }
                
                //loop objects to insert into the staging table as per outout file format
                foreach (BaiPreviousDayGroup curgroup in curFile.Groups) 
                {
                    foreach (BaiPreviousDayAccount curaccount in curgroup.Accounts)
                    {
                        foreach (string curtrx in curaccount.DetailTransactions)
                        {
                            query = "Insert into dbo." + TableName + " ([packet01],[packet02],[packet03],[packet16],[packet49],[packet98],[packet99]) ";
                            query += "values(";
                            query += "'" + curFile.FileHeader + "'";
                            query += ",'" + curgroup.GroupHeader + "'";
                            query += ",'" + curaccount.AccountHeader + "'";
                            query += ",'" + curtrx + "'";
                            query += ",'" + curaccount.AccountTrailer + "'";
                            query += ",'" + curgroup.GroupTrailer + "'";
                            query += ",'" + curFile.FileTrailer + "'";
                            query += ")";
                            SqlCommand SQLCommand = new SqlCommand(query, conn);
                            SQLCommand.ExecuteNonQuery(); 
                        };
                    };
                };

                Dts.TaskResult = (int)ScriptResults.Success;
                conn.Close();
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(0, "Exception from Script Task", ex.Message + "\r" + ex.StackTrace, String.Empty, 0);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_e985b86348734252bd8708c7416e6996</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_e985b86348734252bd8708c7416e6996</msb:DisplayName>
    <msb:ProjectId>{90D76415-8A1B-44E8-A8F4-FD1D6801F7B9}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_e985b86348734252bd8708c7416e6996.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="ST_e985b86348734252bd8708c7416e6996.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{e895dd5d-da5e-48b0-aaff-1dacbe77cf17}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_e985b86348734252bd8708c7416e6996</RootNamespace>
    <AssemblyName>ST_e985b86348734252bd8708c7416e6996</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_e985b86348734252bd8708c7416e6996")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_e985b86348734252bd8708c7416e6996")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e985b86348734252bd8708c7416e6996.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e985b86348734252bd8708c7416e6996.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e985b86348734252bd8708c7416e6996.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_e985b86348734252bd8708c7416e6996.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_e985b86348734252bd8708c7416e6996.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_e985b86348734252bd8708c7416e6996.dll">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
I0dVSUQAAAA8FQAArAIAACNCbG9iAAAAAAAAAAIAAAFXHaIJCQMAAAD6ATMAFgAAAQAAACwAAAAJ
AAAADwAAAB8AAAALAAAASgAAAAIAAAAsAAAAAgAAAAUAAAAMAAAAFgAAAAYAAAABAAAABQAAAAEA
AAAEAAAAAAB4BQEAAAAAAAYAAQTkBwYAkATkBwYATQPRBw8AWAgAAAYAegMUBgYA5AMUBgYAxQMU
BgYAdwQUBgYAIQQUBgYAOgQUBgYAkQMUBgYArAO+BAoAVQQnBQoAvgInBQ4ARQZ3CQYA8gZUAAYA
AQCaAEcAuQcAAAYAUwayBQYAVQmyBQYAFQPkBwYAvgWyBQYAMAPRBwYADgcECAYAcAbvBRIAAANi
BRIAYQNiBRIA2gLaBQoAUAUnBRYAmghWAhYAAgJWAgYA2gSyBRYA3whWAhYAHgdWAgYATgKyBQYA
/wZUAA4AzAF3CQ4AwgFdBgYACwKyBQ4AJgZdBgoAmAcnBQYAiQKyBQYAFwKyBQYAxgkUBgAAAAAs
AAAAAAABAAEAAQAQAM8FCAA5AAEAAQAAABAACwhnCFEAAQADAAABEACkCGcIcQADAAcAAAEAADUA
AABRAAQACgADABAAOwIAAFEABAALAAMAEAB8BgAAUQAHABIAAwAQAKMJAABRAAoAGQADAQAAGwkA
AFkADQAgABEAwwU/AREArgJDAREA5gFHAQEAuQBgAAEAkAFLAQEAEQFgAAEA1QBgAAEAqAFTAQEA
LgFgAAEA8gBgAAEAbAFbAQEATAFgAAYGfQBiAVaACwllAVaAjgJlAVAgAAAAAIYA1QUGAAEAICcA
AAAAhhjEBwYAAQAoJwAAAACDGMQHBgABADAnAAAAAJMICgdpAQEAXCcAAAAAkwiWAm4BAQBjJwAA
AACTCKICcwEBAGsnAAAAAJYIXAl5AQIAcicAAAAAhhjEBwYAAgB6JwAAAACRGMoHfgECAIgnAAAA
AJMA6wSCAQIAwCcAAAAAhgiQBlwAAwDIJwAAAACGCJ8GEAADANEnAAAAAIYI6wiHAQQA2ScAAAAA
hgj2CJABBADiJwAAAACGCDAHXAAFAOonAAAAAIYIQAcQAAUAKCcAAAAAhhjEBwYABgDzJwAAAACG
CK4GXAAGAPsnAAAAAIYIvgYQAAYABCgAAAAAhgg0CZoBBwAMKAAAAACGCEEJowEHABUoAAAAAIYI
UAdcAAgAHSgAAAAAhghhBxAACAAoJwAAAACGGMQHBgAJACYoAAAAAIYIzgZcAAkALigAAAAAhgjg
BhAACQA3KAAAAACGCK0IrQEKAD8oAAAAAIYIxAi1AQoASCgAAAAAhghyB1wACwBQKAAAAACGCIUH
EAALACgnAAAAAIYYxAcGAAwAAAABALgEAAABAEwJAAABALgEAAABALgEAAABALgEAAABALgEAAAB
ALgEAAABALgEAAABALgEAAABALgEAAABALgECQDEBwEAEQDEBwYAGQDEBwoAKQDEBxAAMQDEBxAA
OQDEBxAAQQDEBxAASQDEBxAAUQDEBxAAWQDEBxAAYQDEBxAAaQDEBwYAqQDEBwYAuQDEBwYA2QDE
BxUAcQATCUgA6QCWCE0A8QCgBVIA+QCuBFgAoQDYBFwAAQHrCWAADADEBwYAeQDEBwYA6QDbCGkA
CQGgBW8A6QAEBlgAEQEzBnYAgQDEBxAAFADEBwYAAQG5BVwAAQHhBIIAAQH9BIgAAQHfCYwAFAC1
AJIAFACZCYgAFACgBZgAHADEBwYAHAC1AJIAHACZCYgAHACgBZgADAC1AJIAAQFOCaUADACZCYgA
DACgBZgADACpBasAGQF/ArIAIQF2AlwAFAC2B7cAJACNCccAHAC2B7cALACNCccADAC2B7cANACN
CccAAQFOCdkAAQFOCeAAKQHEB+gAMQHPCYgANAC5Ce8AOQH4AgYALAC5Ce8AJAC5Ce8A6QBoCQEA
QQHyAgYA6QApCfMAmQD2AVwAmQDXAVwASQGsB/kAcQDEBwYAoQDEBwYAUQEpAgIBUQHCCQsBwQDE
BxEB4QDEBwYAAQEBCR4BCAA4ADUBCAA8ADoBKQB7ABMCLgALAOsBLgATAPQBLgAbABMCLgAjABwC
LgArAEUCLgAzAEUCLgA7AEUCLgBDABwCLgBLAEsCLgBTAEUCLgBbAGICQwBjADoBSQB7ABMCYQBr
ADoBYwBzADoBgQBrADoBoQBrADoBowBrADoBwQBrADoB4QBrADoBAQFrADoBIQFrADoBQQFrADoB
YAFrADoBYQFrADoBgAFrADoBgQFrADoBoAFrADoBwAFrADoB4AFrADoBAAJrADoBQAJrADoBYAJr
ADoBgAJrADoBoAJrADoBwAJrADoB4AJrADoBIANrADoBQANrADoBYANrADoBgANrADoBoANrADoB
wANrADoBGwAZAQMAAQAEAAMABgAEAAcABwAIAAoAAAAOB74BAAC2AsMBAABgCcgBAACjBs0BAAD6
CNEBAABEB80BAADCBs0BAABFCdoBAABlB80BAADkBs0BAADICOMBAACJB80BAgAEAAMAAgAFAAUA
AQAGAAUAAgAHAAcAAgALAAkAAQAMAAkAAgANAAsAAQAOAAsAAgAPAA0AAQAQAA0AAgASAA8AAQAT
AA8AAgAUABEAAQAVABEAAgAWABMAAQAXABMAAgAZABUAAQAaABUAAgAbABcAAQAcABcAAgAdABkA
AQAeABkAYwB7AJ4AwADMANMABIAAAAEAAAAKHlSSAAAAAAAACAAAAAQAAAAAAAAAAAAAACMBkQAA
AAAADwAAAAAAAAAAAAAALAEIBQAAAAAEAAAAAAAAAAAAAAAjAYUAAAAAAAQAAAAAAAAAAAAAACMB
sgUAAAAADwAAAAAAAAAAAAAALAFeAAAAAAAAAAAAAQAAABUIAAAGAAIABwACAAgAAgAJAAIAAAAA
AABMaXN0YDEAU1RfZTk4NWI4NjM0ODczNDI1MmJkODcwOGM3NDE2ZTY5OTYAPE1vZHVsZT4APFBy
aXZhdGVJbXBsZW1lbnRhdGlvbkRldGFpbHM+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVy
Lk1hbmFnZWREVFMAdmFsdWVfXwBTeXN0ZW0uRGF0YQBtc2NvcmxpYgBTeXN0ZW0uQ29sbGVjdGlv
bnMuR2VuZXJpYwBBZGQAPEZpbGVIZWFkZXI+a19fQmFja2luZ0ZpZWxkADxHcm91cEhlYWRlcj5r
X19CYWNraW5nRmllbGQAPEFjY291bnRIZWFkZXI+a19fQmFja2luZ0ZpZWxkADxGaWxlVHJhaWxl
cj5rX19CYWNraW5nRmllbGQAPEdyb3VwVHJhaWxlcj5rX19CYWNraW5nRmllbGQAPEFjY291bnRU
cmFpbGVyPmtfX0JhY2tpbmdGaWVsZAA8RGV0YWlsVHJhbnNhY3Rpb25zPmtfX0JhY2tpbmdGaWVs
ZAA8R3JvdXBzPmtfX0JhY2tpbmdGaWVsZAA8QWNjb3VudHM+a19fQmFja2luZ0ZpZWxkAERiQ29t
bWFuZABTcWxDb21tYW5kAGdldF9TdGFja1RyYWNlAGRlZmF1bHRJbnN0YW5jZQBnZXRfTWVzc2Fn
ZQBWYXJpYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRs
ZQBCYWlQcmV2aW91c0RheUZpbGUAQ29uc29sZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50
aW1lAFJlYWRMaW5lAFdyaXRlTGluZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1
cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlv
blNldHRpbmdzQmFzZQBDbG9zZQBEaXNwb3NlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVy
R2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJs
ZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0
ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNz
ZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUA
Q29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUA
QXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmli
dXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0
ZQBnZXRfVmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBTdWJz
dHJpbmcAQ29tcHV0ZVN0cmluZ0hhc2gAZ2V0X0xlbmd0aABNaWNyb3NvZnQuU3FsU2VydmVyLlNj
cmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRP
YmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfZTk4NWI4NjM0ODczNDI1MmJkODcw
OGM3NDE2ZTY5OTYuZGxsAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQBUcmltAEVudW0AcmVzb3Vy
Y2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlv
bgBnZXRfVHJhbnNhY3Rpb24AU3lzdGVtLlJlZmxlY3Rpb24ARGJDb25uZWN0aW9uAEFjcXVpcmVD
b25uZWN0aW9uAFNxbENvbm5lY3Rpb24ARXhjZXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBDdWx0
dXJlSW5mbwBCYWlQcmV2aW91c0RheUdyb3VwAGdldF9GaWxlSGVhZGVyAHNldF9GaWxlSGVhZGVy
AGdldF9Hcm91cEhlYWRlcgBzZXRfR3JvdXBIZWFkZXIAZ2V0X0FjY291bnRIZWFkZXIAc2V0X0Fj
Y291bnRIZWFkZXIAU3RyZWFtUmVhZGVyAFRleHRSZWFkZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBD
b25uZWN0aW9uTWFuYWdlcgBnZXRfRmlsZVRyYWlsZXIAc2V0X0ZpbGVUcmFpbGVyAGdldF9Hcm91
cFRyYWlsZXIAc2V0X0dyb3VwVHJhaWxlcgBnZXRfQWNjb3VudFRyYWlsZXIAc2V0X0FjY291bnRU
cmFpbGVyAEV2ZW50c09iamVjdFdyYXBwZXIARmlyZUVycm9yAEdldEVudW1lcmF0b3IALmN0b3IA
LmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2Vz
AFN5c3RlbS5SZXNvdXJjZXMAU1RfZTk4NWI4NjM0ODczNDI1MmJkODcwOGM3NDE2ZTY5OTYuUHJv
cGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUX2U5ODViODYzNDg3
MzQyNTJiZDg3MDhjNzQxNmU2OTk2LlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBn
ZXRfRGV0YWlsVHJhbnNhY3Rpb25zAHNldF9EZXRhaWxUcmFuc2FjdGlvbnMAZ2V0X0Nvbm5lY3Rp
b25zAGdldF9Hcm91cHMAc2V0X0dyb3VwcwBnZXRfQ2hhcnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlw
dFJlc3VsdHMAZ2V0X0V2ZW50cwBnZXRfQWNjb3VudHMAc2V0X0FjY291bnRzAENvbmNhdABPYmpl
Y3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AGdldF9D
dXJyZW50AGdldF9Db3VudABCYWlQcmV2aW91c0RheUFjY291bnQATW92ZU5leHQAZ2V0X0Fzc2Vt
Ymx5AEV4ZWN1dGVOb25RdWVyeQBvcF9FcXVhbGl0eQBFbXB0eQAAAAAAEUYAaQBsAGUATgBhAG0A
ZQAAE1QAYQBiAGwAZQBOAGEAbQBlAAAnZABlAHMAdABfAGEAZABvAF8AZABiAF8AcwB0AGEAZwBp
AG4AZwAABTAAMQAABTAAMgAABTAAMwAABTEANgAABTgAOAAABTQAOQAABTkAOAAABTkAOQAAI0kA
bgB2AGEAbABpAGQAIABSAGUAYwBvAHIAZAAgAEkARAAAIUkAbgBzAGUAcgB0ACAAaQBuAHQAbwAg
AGQAYgBvAC4AAIChIAAoAFsAcABhAGMAawBlAHQAMAAxAF0ALABbAHAAYQBjAGsAZQB0ADAAMgBd
ACwAWwBwAGEAYwBrAGUAdAAwADMAXQAsAFsAcABhAGMAawBlAHQAMQA2AF0ALABbAHAAYQBjAGsA
ZQB0ADQAOQBdACwAWwBwAGEAYwBrAGUAdAA5ADgAXQAsAFsAcABhAGMAawBlAHQAOQA5AF0AKQAg
AAAPdgBhAGwAdQBlAHMAKAAAAycAAQUsACcAAQMpAAA1RQB4AGMAZQBwAHQAaQBvAG4AIABmAHIA
bwBtACAAUwBjAHIAaQBwAHQAIABUAGEAcwBrAAADDQAAcVMAVABfAGUAOQA4ADUAYgA4ADYAMwA0
ADgANwAzADQAMgA1ADIAYgBkADgANwAwADgAYwA3ADQAMQA2AGUANgA5ADkANgAuAFAAcgBvAHAA
ZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAAyEOfVslPQTKNIeFFLZyUvAAQgAQEI
AyAAAQUgAQEREQQgAQEOBSABARFpLAcSDg4SGA4ODhI9EkEJFRJFAQ4IFRFJARIcEhwVEUkBEiAS
IBURSQEODhJNBCAAEnUEIAASeQUgARJ9HAMgABwDIAAOAgYOBRUSRQEOBSAAEoCFBiABEoCJHAQg
ARwcBhUSRQESHAUgAg4ICAMgAAgFAAICDg4FIAEBEwAFIAETAAgGFRJFARIgBQACDg4OBiACAQgT
AAQAAQEOCCAAFRFJARMABhURSQESHAQgABMABhURSQESIAUVEUkBDgYAAw4ODg4HAAQODg4ODgYg
AgEOEj0DIAACBSAAEoClCCAFAggODg4ICAABEoCpEYCtBSAAEoCxByACAQ4SgLEEBwIJCAQgAQMI
CLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEmEDBhJlAwYSEAcGFRJFARIcBwYVEkUBEiAG
BhUSRQEOAgYIAwYRJAQAABJhBAAAEmUFAAEBEmUEAAASEAMAAAEEAAEJDgggABUSRQESHAkgAQEV
EkUBEhwIIAAVEkUBEiAJIAEBFRJFARIgByAAFRJFAQ4IIAEBFRJFAQ4ECAASYQQIABJlBAgAEhAD
KAAOCCgAFRJFARIcCCgAFRJFARIgBygAFRJFAQ4IAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNl
cHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUX2U5ODViODYzNDg3MzQyNTJiZDg3MDhjNzQxNmU2
OTk2AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjEAAEkBABouTkVURnJhbWV3b3JrLFZlcnNp
b249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43tAAAAM7K
774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVy
c2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkz
NGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQ
QURQtAAAACRBAAAAAAAAAAAAAD5BAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwQQAAAAAAAAAA
AAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
ABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQBUkgoeAAABAFSSCh4/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAANABi
ADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEA
bQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABf
AGUAOQA4ADUAYgA4ADYAMwA0ADgANwAzADQAMgA1ADIAYgBkADgANwAwADgAYwA3ADQAMQA2AGUA
NgA5ADkANgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA3ADYAOQAw
AC4AMwA3ADQANgAwAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGUA
OQA4ADUAYgA4ADYAMwA0ADgANwAzADQAMgA1ADIAYgBkADgANwAwADgAYwA3ADQAMQA2AGUANgA5
ADkANgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAA
eQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAxAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBt
AGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAA
UwBUAF8AZQA5ADgANQBiADgANgAzADQAOAA3ADMANAAyADUAMgBiAGQAOAA3ADAAOABjADcANAAx
ADYAZQA2ADkAOQA2AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMA
VABfAGUAOQA4ADUAYgA4ADYAMwA0ADgANwAzADQAMgA1ADIAYgBkADgANwAwADgAYwA3ADQAMQA2
AGUANgA5ADkANgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4A
NwA2ADkAMAAuADMANwA0ADYAMAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANwA2ADkAMAAuADMANwA0ADYAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAABQMQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{0BECCC95-C06B-4799-8EC4-84382F5CD738}"
      DTS:From="Package\Create Staging Table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Script Task" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{67F3A605-7CC7-4449-8CB2-95B64CA2EE56}"
      DTS:From="Package\Script Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Data Flow Task - Export File" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="176.8,41.6"
          Id="Package\Create Staging Table"
          TopLeft="505.666647427613,187.500001446406" />
        <NodeLayout
          Size="208.8,41.6"
          Id="Package\Data Flow Task - Export File"
          TopLeft="489.666647427613,390.700001446406" />
        <NodeLayout
          Size="130.4,41.6"
          Id="Package\Script Task"
          TopLeft="528.866647427613,289.100001446406" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="594.066647427613,229.100001446406">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59.9999999999999"
              Start="0,0"
              End="0,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="594.066647427613,330.700001446406">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Data Flow Task - Export File">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="160,41.6"
          Id="Package\Data Flow Task - Export File\ADO NET Source"
          TopLeft="544.999978343647,189.800001508395" />
        <NodeLayout
          Size="170.4,41.6"
          Id="Package\Data Flow Task - Export File\Flat File Destination"
          TopLeft="559.166644447381,339.733336033291" />
        <EdgeLayout
          Id="Package\Data Flow Task - Export File.Paths[ADO NET Source Output]"
          TopLeft="624.999978343647,231.400001508395">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="19.366666103734,108.333334524897"
              Start="0,0"
              End="19.366666103734,100.833334524897">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.1666672624483" />
                  <mssgle:CubicBezierSegment
                    Point1="0,50.1666672624483"
                    Point2="0,54.1666672624483"
                    Point3="4,54.1666672624483" />
                  <mssgle:LineSegment
                    End="15.366666103734,54.1666672624483" />
                  <mssgle:CubicBezierSegment
                    Point1="15.366666103734,54.1666672624483"
                    Point2="19.366666103734,54.1666672624483"
                    Point3="19.366666103734,58.1666672624483" />
                  <mssgle:LineSegment
                    End="19.366666103734,100.833334524897" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task - Export File\ADO NET Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>